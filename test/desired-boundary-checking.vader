Given vim (Sample code from textobj-word-column):
  exec "silent normal! v" . a:textobj . "\<Esc>"
  let start_col       = virtcol("'<")
  let stop_col        = virtcol("'>")
  let line_num        = line(".")
  let indent_level    = s:indent_level(".")

Do (Selection looks for matching word lengths):
  jfvcicflirtcol

Expect vim (Selected virtcol and changed to flirtcol):
  exec "silent normal! v" . a:textobj . "\<Esc>"
  let start_col       = flirtcol("'<")
  let stop_col        = flirtcol("'>")
  let line_num        = line(".")
  let indent_level    = s:indent_level(".")

Do (Selection falls back to matching beginning of word with current word length):
  3j2flvicyP

Expect vim (Selected line and copypaste):
  exec "silent normal! v" . a:textobj . "\<Esc>"
  let start_col       = virtvirtcol("'<")
  let stop_col        = virtvirtcol("'>")
  let line_num        = lineline(".")
  let indent_level    = s:ins:indent_level(".")

Given cpp (Words with trailing alignment):
  int start_cols      = virtcol();
  float stop_col      = virtcol();
  char line_nums      = line();
  float* indent_level = indent_level();

Do (Selection of right-aligned column):
  jwvicA_const\<Esc>

Expect cpp (Appended to right-aligned column):
  int start_cols_const      = virtcol();
  float stop_col_const      = virtcol();
  char line_nums_const      = line();
  float* indent_level = indent_level();

Given cpp (Surrounding lines with both start and trailing alignment):
  int start_cols      = virtcol();
  float stop_col      = virtcol();
  char line_nums      = line();
  int* indent_level = indent_level();

Do (Selection prefers start alignment over end alignment):
  2jwvicInew_\<Esc>

Expect cpp (Prepended to matching start-aligned text):
  int start_cols      = virtcol();
  float stop_col      = virtcol();
  char new_line_nums      = line();
  int* new_indent_level = indent_level();

